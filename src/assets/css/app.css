/*
	From ITCSS (https://medium.freecodecamp.org/managing-large-s-css-projects-using-the-inverted-triangle-architecture-3c03e4b1e6df)
	and SMACSS (https://smacss.com/book/categorizing)

	Layer styles from:
		- generic to explicit
		- low to high specificity
		- far-reaching to localiced

	Settings:
		Variables, Themes etc.

	Tools:
		Mixins, functions, ...

	Generic:
		Normalize, reset, box-sizing, ...

	Base: Default single element styles. No ids or classes. Includes CSS reset.

		html, body, a
		html {}
		body {}
		a {}

	Layout: Divide the page into sections and combines several modules. Elements or ids.

		heady, footer, main
		#containerId
		#wrapperId
		.l-layoutName

	Components: The reusable, modular parts of the design.

		From BEM (http://getbem.com/naming/)

		Blocks: A standalone entity that is meaningful on its own.

				class="blockName"
				.blockName {}

		Elements: Parts of a block that have no standalone meaning.

				class="blockName_elementName"
				.blockName__elementName {}

		Modifiers: Flags on blocks or elements that change appearance, behaviour or state

				class="blockName__elementName -is-modifierName"
				.blockName__elementName.-is-modifierName {}

	State: How modules or layouts look when in a particular state

		.is-stateName
		!important

*/

/* Settings */

@import "./settings/variables.css";

/* Tools */

/* Generic */

@import "normalize.css";
@import "./generic/generic.css";

/* Base */

@import "./base/headers.css";
@import "./base/links.css";
@import "./base/lists.css";
@import "./base/input.css";

/* Layout */

@import "./layout/container.css";
@import "./layout/wrapper.css";

/* Components */
@import "./components/app.css";
@import "./components/baseLayout.css";
@import "./components/parallaxContainer.css";
@import "./components/navBar.css";

@import "./components/about.css";
@import "./components/exercise.css";
@import "./components/exerciseList.css";
@import "./components/exerciseLogList.css";
@import "./components/releaseNotes.css";
@import "./components/workout.css";
@import "./components/workoutList.css";
@import "./components/workoutLog.css";
@import "./components/workoutLogList.css";

/* State */

@import "./test.css";

html {
	box-sizing: border-box;
	color: var(--neutral-1);
	font-family: var(--main-font);
	font-size: calc(var(--min-font-size) * 1px);
	height: 100vh;
	line-height: var(--line-height);
	min-width: calc(var(--min-width) * 1px);
	width: 100vw;
}

body {
	height: 100vh;
	width: 100vw;
}

p {
	margin-bottom: var(--margin);
	margin-top: var(--margin);
	max-width: var(--max-text-width);
}

main a {
	color: var(--primary-6);
	font-weight: 600;
}

nav ul li {
	padding: var(--padding);
}

nav a {
	text-decoration: none;
}

#inputs {
	justify-content: space-around;
}

.inputWrapper {
	font-size: 2em;
	vertical-align: baseline;
}

.unit {
	font-size: 0.5em;
	font-weight: 600;
	text-transform: uppercase;
}

button.primary {
	background-color: var(--primary-5);
	color: var(--primary-9);
	padding: var(--padding);
}

button.secondary {
	border: 1px solid var(--primary-5);
	padding: var(--padding) var(--size-4);
}

.flex-container {
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.flex-container.horizontal {
	flex-direction: row;
}

.flex-container.wrap {
	flex-wrap: wrap;
}

#contentWrapper {
	box-shadow: none;
	height: 100%;
	justify-content: flex-start;
	width: 100%;
	z-index: 0;
}

#mainWrapper {
	align-items: center;
	background-color: var(--neutral-9);
	flex-grow: 1;
	justify-content: flex-start;
	overflow: auto;
	width: 100%;
}

main a:hover {
	border-bottom: 2px solid var(--primary-6);
}

main a:visited {
	color: var(--primary-6);
}

nav a.router-link-exact-active {
	background-color: var(--neutral-1);
	color: var(--neutral-9);
}

.emptyState {
	align-items: center;
	color: var(--neutral-5);
	display: flex;
	flex-direction: column;
	height: 100%;
	justify-content: center;
	text-align: center;
}

.illustration {
	margin: var(--size-5);
	max-height: 256px;
	max-width: 256px;
}

.emptyState p {
	margin: var(--size-3);
}

.card {
	background-color: white;
	border-bottom: 2px solid var(--neutral-7);
	border-radius: var(--border-radius);
	margin-bottom: var(--margin);
	padding: var(--padding);
	width: 100%;
}

.card.transition {
	background-color: transparent;
	border: 2px dashed var(--neutral-7);
}

@media all and (min-width: 280px) {
	/* Fix: Once env variables are supported, use them here */

	html {
		font-size: calc(
			calc(var(--min-font-size) * 1px) + var(--delta-font-size) *
				((100vw - calc(var(--min-width) * 1px)) / var(--delta-width))
		);
	}
}

@media all and (min-width: 800px) {
	#contentWrapper {
		box-shadow: var(--box-shadow-2);
		z-index: 100;
	}
}

@media all and (min-width: 1200px) {
	/* Fix: Once env variables are supported, use them here */

	html {
		font-size: calc(var(--max-font-size) * 1px);
	}
}
